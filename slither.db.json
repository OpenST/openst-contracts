[{"check": "incorrect-equality", "impact": "Medium", "confidence": "High", "description": "DelayedRecoveryModule.noActiveRecovery (openst-contracts-fork-2/contracts/gnosis_safe_modules/DelayedRecoveryModule.sol) uses a dangerous strict equality:\n\t- require(bool,string)(activeRecoveryInfo.executionBlockHeight == 0,There is an active recovery.)\n\t- require(bool,string)(activeRecoveryInfo.executionBlockHeight == 0,There is an active recovery.)\n", "elements": [{"type": "function", "name": "noActiveRecovery", "source_mapping": {"start": 3439, "length": 180, "filename": "/Users/pro/workspace/ost/openst-contracts/fork/openst-contracts-fork-2/contracts/gnosis_safe_modules/DelayedRecoveryModule.sol", "lines": []}, "contract": {"type": "contract", "name": "DelayedRecoveryModule", "source_mapping": {"start": 1357, "length": 11636, "filename": "/Users/pro/workspace/ost/openst-contracts/fork/openst-contracts-fork-2/contracts/gnosis_safe_modules/DelayedRecoveryModule.sol", "lines": []}}}, {"type": "expression", "expression": "require(bool,string)(activeRecoveryInfo.executionBlockHeight == 0,There is an active recovery.)", "source_mapping": {"start": 3481, "length": 119, "filename": "/Users/pro/workspace/ost/openst-contracts/fork/openst-contracts-fork-2/contracts/gnosis_safe_modules/DelayedRecoveryModule.sol", "lines": []}}, {"type": "expression", "expression": "require(bool,string)(activeRecoveryInfo.executionBlockHeight == 0,There is an active recovery.)", "source_mapping": {"start": 3481, "length": 119, "filename": "/Users/pro/workspace/ost/openst-contracts/fork/openst-contracts-fork-2/contracts/gnosis_safe_modules/DelayedRecoveryModule.sol", "lines": []}}]}, {"check": "incorrect-equality", "impact": "Medium", "confidence": "High", "description": "DelayedRecoveryModule.noActiveRecovery (openst-contracts-fork-2/contracts/gnosis_safe_modules/DelayedRecoveryModule.sol) uses a dangerous strict equality:\n\t- require(bool,string)(activeRecoveryInfo.executionBlockHeight == 0,There is an active recovery.)\n\t- require(bool,string)(activeRecoveryInfo.executionBlockHeight == 0,There is an active recovery.)\nDelayedRecoveryModule.validRecovery (openst-contracts-fork-2/contracts/gnosis_safe_modules/DelayedRecoveryModule.sol) uses a dangerous strict equality:\n\t- require(bool,string)(activeRecoveryInfo.prevOwner == _prevOwner && activeRecoveryInfo.oldOwner == _oldOwner && activeRecoveryInfo.newOwner == _newOwner,The execution request's data does not match with the active one.)\n\t- require(bool,string)(activeRecoveryInfo.prevOwner == _prevOwner && activeRecoveryInfo.oldOwner == _oldOwner && activeRecoveryInfo.newOwner == _newOwner,The execution request's data does not match with the active one.)\n\t- require(bool,string)(activeRecoveryInfo.prevOwner == _prevOwner && activeRecoveryInfo.oldOwner == _oldOwner && activeRecoveryInfo.newOwner == _newOwner,The execution request's data does not match with the active one.)\n\t- require(bool,string)(activeRecoveryInfo.prevOwner == _prevOwner && activeRecoveryInfo.oldOwner == _oldOwner && activeRecoveryInfo.newOwner == _newOwner,The execution request's data does not match with the active one.)\n\t- require(bool,string)(activeRecoveryInfo.prevOwner == _prevOwner && activeRecoveryInfo.oldOwner == _oldOwner && activeRecoveryInfo.newOwner == _newOwner,The execution request's data does not match with the active one.)\n\t- require(bool,string)(activeRecoveryInfo.prevOwner == _prevOwner && activeRecoveryInfo.oldOwner == _oldOwner && activeRecoveryInfo.newOwner == _newOwner,The execution request's data does not match with the active one.)\n", "elements": [{"type": "function", "name": "validRecovery", "source_mapping": {"start": 3625, "length": 469, "filename": "/Users/pro/workspace/ost/openst-contracts/fork/openst-contracts-fork-2/contracts/gnosis_safe_modules/DelayedRecoveryModule.sol", "lines": []}, "contract": {"type": "contract", "name": "DelayedRecoveryModule", "source_mapping": {"start": 1357, "length": 11636, "filename": "/Users/pro/workspace/ost/openst-contracts/fork/openst-contracts-fork-2/contracts/gnosis_safe_modules/DelayedRecoveryModule.sol", "lines": []}}}, {"type": "expression", "expression": "require(bool,string)(activeRecoveryInfo.prevOwner == _prevOwner && activeRecoveryInfo.oldOwner == _oldOwner && activeRecoveryInfo.newOwner == _newOwner,The execution request's data does not match with the active one.)", "source_mapping": {"start": 3750, "length": 325, "filename": "/Users/pro/workspace/ost/openst-contracts/fork/openst-contracts-fork-2/contracts/gnosis_safe_modules/DelayedRecoveryModule.sol", "lines": []}}, {"type": "expression", "expression": "require(bool,string)(activeRecoveryInfo.prevOwner == _prevOwner && activeRecoveryInfo.oldOwner == _oldOwner && activeRecoveryInfo.newOwner == _newOwner,The execution request's data does not match with the active one.)", "source_mapping": {"start": 3750, "length": 325, "filename": "/Users/pro/workspace/ost/openst-contracts/fork/openst-contracts-fork-2/contracts/gnosis_safe_modules/DelayedRecoveryModule.sol", "lines": []}}, {"type": "expression", "expression": "require(bool,string)(activeRecoveryInfo.prevOwner == _prevOwner && activeRecoveryInfo.oldOwner == _oldOwner && activeRecoveryInfo.newOwner == _newOwner,The execution request's data does not match with the active one.)", "source_mapping": {"start": 3750, "length": 325, "filename": "/Users/pro/workspace/ost/openst-contracts/fork/openst-contracts-fork-2/contracts/gnosis_safe_modules/DelayedRecoveryModule.sol", "lines": []}}, {"type": "expression", "expression": "require(bool,string)(activeRecoveryInfo.prevOwner == _prevOwner && activeRecoveryInfo.oldOwner == _oldOwner && activeRecoveryInfo.newOwner == _newOwner,The execution request's data does not match with the active one.)", "source_mapping": {"start": 3750, "length": 325, "filename": "/Users/pro/workspace/ost/openst-contracts/fork/openst-contracts-fork-2/contracts/gnosis_safe_modules/DelayedRecoveryModule.sol", "lines": []}}, {"type": "expression", "expression": "require(bool,string)(activeRecoveryInfo.prevOwner == _prevOwner && activeRecoveryInfo.oldOwner == _oldOwner && activeRecoveryInfo.newOwner == _newOwner,The execution request's data does not match with the active one.)", "source_mapping": {"start": 3750, "length": 325, "filename": "/Users/pro/workspace/ost/openst-contracts/fork/openst-contracts-fork-2/contracts/gnosis_safe_modules/DelayedRecoveryModule.sol", "lines": []}}, {"type": "expression", "expression": "require(bool,string)(activeRecoveryInfo.prevOwner == _prevOwner && activeRecoveryInfo.oldOwner == _oldOwner && activeRecoveryInfo.newOwner == _newOwner,The execution request's data does not match with the active one.)", "source_mapping": {"start": 3750, "length": 325, "filename": "/Users/pro/workspace/ost/openst-contracts/fork/openst-contracts-fork-2/contracts/gnosis_safe_modules/DelayedRecoveryModule.sol", "lines": []}}]}, {"check": "locked-ether", "impact": "Medium", "confidence": "High", "description": "Contract locking ether found in :\n\tContract Proxy has payable functions:\n\t - fallback (openst-contracts-fork-2/contracts/proxies/Proxy.sol)\n\tBut does not have a function to withdraw the ether\n", "elements": [{"type": "function", "name": "fallback", "source_mapping": {"start": 1572, "length": 519, "filename": "/Users/pro/workspace/ost/openst-contracts/fork/openst-contracts-fork-2/contracts/proxies/Proxy.sol", "lines": []}, "contract": {"type": "contract", "name": "Proxy", "source_mapping": {"start": 983, "length": 1110, "filename": "/Users/pro/workspace/ost/openst-contracts/fork/openst-contracts-fork-2/contracts/proxies/Proxy.sol", "lines": []}}}, {"type": "contract", "name": "Proxy", "source_mapping": {"start": 983, "length": 1110, "filename": "/Users/pro/workspace/ost/openst-contracts/fork/openst-contracts-fork-2/contracts/proxies/Proxy.sol", "lines": []}}]}]